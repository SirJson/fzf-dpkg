#!/bin/bash

export FZF_DEFAULT_OPTS="--exact --border --cycle --multi --layout=reverse-list $FZF_DEFAULT_OPTS"
SUDO_CMD=$(command -v sudo)

root_check() {
    if [[ $EUID -ne 0 ]]; then
        if ! command -v sudo &>/dev/null; then
            echo "You need to be root or use sudo to continue"
            exit 1
        fi
    fi
}

get_installed_pkgs() {
    dpkg-query --show --showformat='${Package} ${db:Status-Status}\n' | grep installed | awk '{print $1}'
}

fzf_apt_install() {
    local installed_pkg
    local all_pkg

    root_check

    $SUDO_CMD apt-get update

    installed_pkg=get_installed_pkgs
    all_pkg=$(apt-cache pkgnames)

    awk '{ h[$0] = ! h[$0] } END { for (k in h) if (h[k]) print k }' <(echo "$installed_pkg") <(echo "$all_pkg") | fzf --preview='apt-cache show {}' --header='Install packages. <Tab> = Select multiple packages. <Enter> = Install one or more packages. <ESC> = Exit' --bind "enter:execute($SUDO_CMD apt-get install -y {+})+accept"
}

fzf_apt_cleanpurge() {
    fzf_apt_purge && $SUDO_CMD apt-get autoremove
}

fzf_apt_purge() {
    root_check
    local selection
    selection=$(get_installed_pkgs | fzf --preview='dpkg-query -s {}' --header='Uninstall packages. <Tab> = Select multiple packages. <Enter> = Uninstall one or more packages. <ESC> = Exit')
    if [[ -n "$selection" ]]; then
        $SUDO_CMD apt-get purge -y "$selection"
    fi
}

fzf_apt_list() {
    get_installed_pkgs | fzf --preview='dpkg-query -s {}' --header='Installed packages list. <ESC> = Exit'
}

fzf_apt_upgrade() {
    root_check
    $SUDO_CMD apt-get update && $SUDO_CMD apt-get dist-upgrade
}

fzf_apt_cleanupgrade() {
    fzf_apt_upgrade && $SUDO_CMD apt-get autoremove
}

case $1 in
add)
    fzf_apt_install
    ;;
rm)
    fzf_apt_purge
    ;;
clean-rm)
    fzf_apt_cleanpurge
    ;;
ls)
    fzf_apt_list
    ;;
update)
    fzf_apt_upgrade
    ;;
clean-update)
    fzf_apt_cleanupgrade
    ;;
*)
    echo "Unknown action $1"
    echo 'Usage: fzf-dpkg (add | rm | clean-rm | ls | update | clean-update)'
    ;;
esac
